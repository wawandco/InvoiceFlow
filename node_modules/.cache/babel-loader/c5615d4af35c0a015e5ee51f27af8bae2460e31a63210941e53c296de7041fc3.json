{"ast":null,"code":"// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n  for (const name in resources) {\n    const camelCaseName = name[0].toLowerCase() + name.substring(1);\n    const resource = new resources[name](stripe);\n    this[camelCaseName] = resource;\n  }\n}\nexport function resourceNamespace(namespace, resources) {\n  return function (stripe) {\n    return new ResourceNamespace(stripe, resources);\n  };\n}","map":{"version":3,"names":["ResourceNamespace","stripe","resources","name","camelCaseName","toLowerCase","substring","resource","resourceNamespace","namespace"],"sources":["/Users/manuelperez/Projects/React/InvoiceFlow/node_modules/stripe/esm/ResourceNamespace.js"],"sourcesContent":["// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,iBAAiBA,CAACC,MAAM,EAAEC,SAAS,EAAE;EAC1C,KAAK,MAAMC,IAAI,IAAID,SAAS,EAAE;IAC1B,MAAME,aAAa,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;IAC/D,MAAMC,QAAQ,GAAG,IAAIL,SAAS,CAACC,IAAI,CAAC,CAACF,MAAM,CAAC;IAC5C,IAAI,CAACG,aAAa,CAAC,GAAGG,QAAQ;EAClC;AACJ;AACA,OAAO,SAASC,iBAAiBA,CAACC,SAAS,EAAEP,SAAS,EAAE;EACpD,OAAO,UAAUD,MAAM,EAAE;IACrB,OAAO,IAAID,iBAAiB,CAACC,MAAM,EAAEC,SAAS,CAAC;EACnD,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}