{"ast":null,"code":"'use strict';\n\nimport { StripeResource } from '../StripeResource.js';\nimport { stringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n  basePath: '/',\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n    let path = 'oauth/authorize';\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n    return `https://${oAuthHost}/${path}?${stringifyRequestData(params)}`;\n  },\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost\n  }),\n  deauthorize(spec, ...args) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost\n    }).apply(this, [spec, ...args]);\n  }\n});","map":{"version":3,"names":["StripeResource","stringifyRequestData","stripeMethod","method","oAuthHost","OAuth","extend","basePath","authorizeUrl","params","options","path","express","response_type","client_id","_stripe","getClientId","scope","token","host","deauthorize","spec","args","apply"],"sources":["/Users/manuelperez/Projects/React/InvoiceFlow/node_modules/stripe/esm/resources/OAuth.js"],"sourcesContent":["'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { stringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${stringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,oBAAoB,QAAQ,aAAa;AAClD,MAAMC,YAAY,GAAGF,cAAc,CAACG,MAAM;AAC1C,MAAMC,SAAS,GAAG,oBAAoB;AACtC,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAACM,MAAM,CAAC;EACvCC,QAAQ,EAAE,GAAG;EACbC,YAAYA,CAACC,MAAM,EAAEC,OAAO,EAAE;IAC1BD,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IACrBC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAIC,IAAI,GAAG,iBAAiB;IAC5B;IACA,IAAID,OAAO,CAACE,OAAO,EAAE;MACjBD,IAAI,GAAI,WAAUA,IAAK,EAAC;IAC5B;IACA,IAAI,CAACF,MAAM,CAACI,aAAa,EAAE;MACvBJ,MAAM,CAACI,aAAa,GAAG,MAAM;IACjC;IACA,IAAI,CAACJ,MAAM,CAACK,SAAS,EAAE;MACnBL,MAAM,CAACK,SAAS,GAAG,IAAI,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC;IACjD;IACA,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE;MACfR,MAAM,CAACQ,KAAK,GAAG,YAAY;IAC/B;IACA,OAAQ,WAAUb,SAAU,IAAGO,IAAK,IAAGV,oBAAoB,CAACQ,MAAM,CAAE,EAAC;EACzE,CAAC;EACDS,KAAK,EAAEhB,YAAY,CAAC;IAChBC,MAAM,EAAE,MAAM;IACdQ,IAAI,EAAE,aAAa;IACnBQ,IAAI,EAAEf;EACV,CAAC,CAAC;EACFgB,WAAWA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;IACvB,IAAI,CAACD,IAAI,CAACP,SAAS,EAAE;MACjBO,IAAI,CAACP,SAAS,GAAG,IAAI,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC;IAC/C;IACA,OAAOd,YAAY,CAAC;MAChBC,MAAM,EAAE,MAAM;MACdQ,IAAI,EAAE,mBAAmB;MACzBQ,IAAI,EAAEf;IACV,CAAC,CAAC,CAACmB,KAAK,CAAC,IAAI,EAAE,CAACF,IAAI,EAAE,GAAGC,IAAI,CAAC,CAAC;EACnC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}