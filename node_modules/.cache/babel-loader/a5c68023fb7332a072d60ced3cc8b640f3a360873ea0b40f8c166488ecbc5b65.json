{"ast":null,"code":"// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n  create: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/quotes'\n  }),\n  retrieve: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/quotes/{quote}'\n  }),\n  update: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/quotes/{quote}'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/quotes',\n    methodType: 'list'\n  }),\n  accept: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/quotes/{quote}/accept'\n  }),\n  cancel: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/quotes/{quote}/cancel'\n  }),\n  finalizeQuote: stripeMethod({\n    method: 'POST',\n    fullPath: '/v1/quotes/{quote}/finalize'\n  }),\n  listComputedUpfrontLineItems: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n    methodType: 'list'\n  }),\n  listLineItems: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/quotes/{quote}/line_items',\n    methodType: 'list'\n  }),\n  pdf: stripeMethod({\n    method: 'GET',\n    fullPath: '/v1/quotes/{quote}/pdf',\n    host: 'files.stripe.com',\n    streaming: true\n  })\n});","map":{"version":3,"names":["StripeResource","stripeMethod","method","Quotes","extend","create","fullPath","retrieve","update","list","methodType","accept","cancel","finalizeQuote","listComputedUpfrontLineItems","listLineItems","pdf","host","streaming"],"sources":["/Users/manuelperez/Projects/React/InvoiceFlow/node_modules/stripe/esm/resources/Quotes.js"],"sourcesContent":["// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        host: 'files.stripe.com',\n        streaming: true,\n    }),\n});\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,MAAMC,YAAY,GAAGD,cAAc,CAACE,MAAM;AAC1C,OAAO,MAAMC,MAAM,GAAGH,cAAc,CAACI,MAAM,CAAC;EACxCC,MAAM,EAAEJ,YAAY,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEI,QAAQ,EAAE;EAAa,CAAC,CAAC;EAChEC,QAAQ,EAAEN,YAAY,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEI,QAAQ,EAAE;EAAqB,CAAC,CAAC;EACzEE,MAAM,EAAEP,YAAY,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEI,QAAQ,EAAE;EAAqB,CAAC,CAAC;EACxEG,IAAI,EAAER,YAAY,CAAC;IACfC,MAAM,EAAE,KAAK;IACbI,QAAQ,EAAE,YAAY;IACtBI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFC,MAAM,EAAEV,YAAY,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEI,QAAQ,EAAE;EAA4B,CAAC,CAAC;EAC/EM,MAAM,EAAEX,YAAY,CAAC;IAAEC,MAAM,EAAE,MAAM;IAAEI,QAAQ,EAAE;EAA4B,CAAC,CAAC;EAC/EO,aAAa,EAAEZ,YAAY,CAAC;IACxBC,MAAM,EAAE,MAAM;IACdI,QAAQ,EAAE;EACd,CAAC,CAAC;EACFQ,4BAA4B,EAAEb,YAAY,CAAC;IACvCC,MAAM,EAAE,KAAK;IACbI,QAAQ,EAAE,gDAAgD;IAC1DI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFK,aAAa,EAAEd,YAAY,CAAC;IACxBC,MAAM,EAAE,KAAK;IACbI,QAAQ,EAAE,+BAA+B;IACzCI,UAAU,EAAE;EAChB,CAAC,CAAC;EACFM,GAAG,EAAEf,YAAY,CAAC;IACdC,MAAM,EAAE,KAAK;IACbI,QAAQ,EAAE,wBAAwB;IAClCW,IAAI,EAAE,kBAAkB;IACxBC,SAAS,EAAE;EACf,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}