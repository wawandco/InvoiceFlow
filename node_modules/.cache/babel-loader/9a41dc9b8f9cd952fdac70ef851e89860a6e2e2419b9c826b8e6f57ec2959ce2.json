{"ast":null,"code":"import * as qs from 'qs';\nconst OPTIONS_KEYS = ['apiKey', 'idempotencyKey', 'stripeAccount', 'apiVersion', 'maxNetworkRetries', 'timeout', 'host'];\nexport function isOptionsHash(o) {\n  return o && typeof o === 'object' && OPTIONS_KEYS.some(prop => Object.prototype.hasOwnProperty.call(o, prop));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function stringifyRequestData(data) {\n  return qs.stringify(data, {\n    serializeDate: d => Math.floor(d.getTime() / 1000).toString()\n  })\n  // Don't use strict form encoding by changing the square bracket control\n  // characters back to their literals. This is fine by the server, and\n  // makes these parameter strings easier to read.\n  .replace(/%5B/g, '[').replace(/%5D/g, ']');\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n  const rc = {\n    '\\n': '\\\\n',\n    '\"': '\\\\\"',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n  };\n  return str => {\n    const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, $0 => rc[$0]);\n    return outputs => {\n      return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) =>\n      // @ts-ignore\n      encodeURIComponent(outputs[$1] || ''));\n    };\n  };\n})();\nexport function extractUrlParams(path) {\n  const params = path.match(/\\{\\w+\\}/g);\n  if (!params) {\n    return [];\n  }\n  return params.map(param => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n  if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n    return {};\n  }\n  if (!isOptionsHash(args[0])) {\n    return args.shift();\n  }\n  const argKeys = Object.keys(args[0]);\n  const optionKeysInArgs = argKeys.filter(key => OPTIONS_KEYS.includes(key));\n  // In some cases options may be the provided as the first argument.\n  // Here we're detecting a case where there are two distinct arguments\n  // (the first being args and the second options) and with known\n  // option keys in the first so that we can warn the user about it.\n  if (optionKeysInArgs.length > 0 && optionKeysInArgs.length !== argKeys.length) {\n    emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n  }\n  return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n  const opts = {\n    auth: null,\n    host: null,\n    headers: {},\n    settings: {}\n  };\n  if (args.length > 0) {\n    const arg = args[args.length - 1];\n    if (typeof arg === 'string') {\n      opts.auth = args.pop();\n    } else if (isOptionsHash(arg)) {\n      const params = Object.assign({}, args.pop());\n      const extraKeys = Object.keys(params).filter(key => !OPTIONS_KEYS.includes(key));\n      if (extraKeys.length) {\n        emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n      }\n      if (params.apiKey) {\n        opts.auth = params.apiKey;\n      }\n      if (params.idempotencyKey) {\n        opts.headers['Idempotency-Key'] = params.idempotencyKey;\n      }\n      if (params.stripeAccount) {\n        opts.headers['Stripe-Account'] = params.stripeAccount;\n      }\n      if (params.apiVersion) {\n        opts.headers['Stripe-Version'] = params.apiVersion;\n      }\n      if (Number.isInteger(params.maxNetworkRetries)) {\n        opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n      }\n      if (Number.isInteger(params.timeout)) {\n        opts.settings.timeout = params.timeout;\n      }\n      if (params.host) {\n        opts.host = params.host;\n      }\n    }\n  }\n  return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const Super = this;\n  const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor') ? sub.constructor : function (...args) {\n    Super.apply(this, args);\n  };\n  // This initialization logic is somewhat sensitive to be compatible with\n  // divergent JS implementations like the one found in Qt. See here for more\n  // context:\n  //\n  // https://github.com/stripe/stripe-node/pull/334\n  Object.assign(Constructor, Super);\n  Constructor.prototype = Object.create(Super.prototype);\n  Object.assign(Constructor.prototype, sub);\n  return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n  if (typeof obj !== 'object') {\n    throw new Error('Argument must be an object');\n  }\n  return Object.keys(obj).reduce((result, key) => {\n    if (obj[key] != null) {\n      result[key] = obj[key];\n    }\n    return result;\n  }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n  if (!(obj && typeof obj === 'object')) {\n    return obj;\n  }\n  return Object.keys(obj).reduce((result, header) => {\n    result[normalizeHeader(header)] = obj[header];\n    return result;\n  }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n  return header.split('-').map(text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase()).join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n  if (callback) {\n    // Ensure callback is called outside of promise stack.\n    return promise.then(res => {\n      setTimeout(() => {\n        callback(null, res);\n      }, 0);\n    }, err => {\n      setTimeout(() => {\n        callback(err, null);\n      }, 0);\n    });\n  }\n  return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n  if (name === 'OAuth') {\n    return 'oauth';\n  } else {\n    return name[0].toLowerCase() + name.substring(1);\n  }\n}\nexport function emitWarning(warning) {\n  if (typeof process.emitWarning !== 'function') {\n    return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n  }\n  return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n  const type = typeof obj;\n  return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n  const result = {};\n  const step = (obj, prevKey) => {\n    Object.keys(obj).forEach(key => {\n      // @ts-ignore\n      const value = obj[key];\n      const newKey = prevKey ? `${prevKey}[${key}]` : key;\n      if (isObject(value)) {\n        if (!(value instanceof Uint8Array) && !Object.prototype.hasOwnProperty.call(value, 'data')) {\n          // Non-buffer non-file Objects are recursively flattened\n          return step(value, newKey);\n        } else {\n          // Buffers and file objects are stored without modification\n          result[newKey] = value;\n        }\n      } else {\n        // Primitives are converted to strings\n        result[newKey] = String(value);\n      }\n    });\n  };\n  step(data, null);\n  return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n  if (!Number.isInteger(n)) {\n    if (defaultVal !== undefined) {\n      return defaultVal;\n    } else {\n      throw new Error(`${name} must be an integer`);\n    }\n  }\n  return n;\n}\nexport function determineProcessUserAgentProperties() {\n  return typeof process === 'undefined' ? {} : {\n    lang_version: process.version,\n    platform: process.platform\n  };\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n  const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  arrays.forEach(array => {\n    merged.set(array, offset);\n    offset += array.length;\n  });\n  return merged;\n}","map":{"version":3,"names":["qs","OPTIONS_KEYS","isOptionsHash","o","some","prop","Object","prototype","hasOwnProperty","call","stringifyRequestData","data","stringify","serializeDate","d","Math","floor","getTime","toString","replace","makeURLInterpolator","rc","str","cleanString","$0","outputs","$1","encodeURIComponent","extractUrlParams","path","params","match","map","param","getDataFromArgs","args","Array","isArray","shift","argKeys","keys","optionKeysInArgs","filter","key","includes","length","emitWarning","join","getOptionsFromArgs","opts","auth","host","headers","settings","arg","pop","assign","extraKeys","apiKey","idempotencyKey","stripeAccount","apiVersion","Number","isInteger","maxNetworkRetries","timeout","protoExtend","sub","Super","Constructor","constructor","apply","create","removeNullish","obj","Error","reduce","result","normalizeHeaders","header","normalizeHeader","split","text","charAt","toUpperCase","substr","toLowerCase","callbackifyPromiseWithTimeout","promise","callback","then","res","setTimeout","err","pascalToCamelCase","name","substring","warning","process","console","warn","isObject","type","flattenAndStringify","step","prevKey","forEach","value","newKey","Uint8Array","String","validateInteger","n","defaultVal","undefined","determineProcessUserAgentProperties","lang_version","version","platform","concat","arrays","totalLength","len","array","merged","offset","set"],"sources":["/Users/manuelperez/Projects/React/InvoiceFlow/node_modules/stripe/esm/utils.js"],"sourcesContent":["import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function stringifyRequestData(data) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => \n            // @ts-ignore\n            encodeURIComponent(outputs[$1] || ''));\n        };\n    };\n})();\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        auth: null,\n        host: null,\n        headers: {},\n        settings: {},\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.auth = args.pop();\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.auth = params.apiKey;\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.keys(obj).forEach((key) => {\n            // @ts-ignore\n            const value = obj[key];\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}